name: release-flow

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version - in the form of v1.2.3'
        required: true
        type: string

# ToDo: adapt names
env:
  # This variable is used to name release output files.
  GAME_EXECUTABLE_NAME: bevy_game
  GAME_OSX_APP_NAME: BevyGame

permissions:
  contents: write

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
    outputs:
      version: ${{ inputs.version || steps.tag.outputs.tag }}

  build-for-iOS:
    timeout-minutes: 30
    needs: get-version
    env:
      VERSION: ${{needs.get-version.outputs.version}}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Add iOS targets
        run: rustup target add aarch64-apple-ios x86_64-apple-ios
      - name: Build app for iOS
        run: |
          cd mobile
          make xcodebuild-iphone-release
          mkdir Payload
          mv build/Build/Products/Release-iphoneos/*.app Payload
          zip -r ${{ env.GAME_EXECUTABLE_NAME }}.zip Payload
          mv ${{ env.GAME_EXECUTABLE_NAME }}.zip ${{ env.GAME_EXECUTABLE_NAME }}.ipa
      - name: Upload release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: mobile/${{ env.GAME_EXECUTABLE_NAME }}.ipa
          asset_name: ${{ env.GAME_EXECUTABLE_NAME }}_${{ env.VERSION }}_unsigned_ios.ipa
          release_name: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
          overwrite: true

  build-for-Android:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: get-version
    env:
      VERSION: ${{needs.get-version.outputs.version}}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Add Android targets
        # could add more targets like armv7-linux-androideabi here (then also add to cargo-apk config)
        run: rustup target add aarch64-linux-android
      - name: Install Cargo APK
        run: cargo install --force cargo-apk
      - name: Build app for Android
        # This uses a debug build, since release builds require keystore configuration
        # For AAB builds that can be pushed to the Play store, see the release-android-google-play workflow.
        run: ANDROID_NDK_ROOT=$ANDROID_NDK_LATEST_HOME cargo apk build --package mobile
      - name: Upload release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/debug/apk/${{ env.GAME_OSX_APP_NAME }}.apk
          asset_name: ${{ env.GAME_EXECUTABLE_NAME }}_${{ env.VERSION }}_android.apk
          release_name: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
          overwrite: true
